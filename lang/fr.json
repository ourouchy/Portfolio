{
  "logo": "Abaarour Moad",
  "homeLink": "Accueil",
  "projectsLink": "Projets",
  "contactLink": "Contact",
  "heroTitle": "Moad Abaarour",
  "heroDescription": "Développeur spécialisé dans la conception et l'optimisation d'applications web. J'allie expertise technique et sens de l'architecture pour proposer des solutions fiables et évolutives.",
  "heroSubtitle": "Développeur Full Stack",
  "professionalStatement": "Fort d'une expérience approfondie en développement full stack et d'un intérêt marqué pour l'IA, je traduis les besoins métiers en logiciels performants et pérennes.",
  "approachStatement": "",
  "techStack.title": "Technologie",
  "techStack.categories.backend": "Backend",
  "techStack.categories.frontend": "Frontend",
  "techStack.categories.cloud": "Cloud & Déploiement",
  "techStack.categories.other": "Autres",
  
  "home": {
    "projectsHighlight": "Du développement backend avec Flask à la création d'interfaces utilisateur réactives, je livre des applications web complètes avec une architecture modulaire prête au déploiement.",
    "viewProjectsButton": "Voir mes projets"
  },
  
  "project1Title": "MECL",


  "project2Title": "Friandos",

  "project3Title": "SliceMyPDF",
  "project4Title": "Infoweb France",
  "project5Title": "Polyglow",
  "other1Title": "SGFS",

  "categoryWeb": "Applications Web",
  "categoryWebDescription": "Applications web full-stack, plateformes e-commerce et outils web",
  "categoryOther": "Autres Projets",
  "categoryOtherDescription": "Applications mobiles, logiciels desktop et autres projets logiciels",
  "backToCategories": "Retour aux Catégories",

  
  "screenshotsLabel": "Captures d'écran de l'application",
  "desktopLabel": "Interface Bureau",
  "mobileLabel": "Expérience Mobile",
  "desktopUploadCaption": "Téléchargement et Aperçu du PDF (Bureau)",
  "desktopSelectionCaption": "Interface de Sélection des Pages (Bureau)",
  "mobileUploadCaption": "Téléchargement de PDF (Mobile)",
  "mobileSelectionCaption": "Sélection des Pages (Mobile)",

  "featuresLabel": "Fonctionnalités Clés",
  "techStackLabel": "Stack Technologique",
  "workflowLabel": "Fonctionnement",
  "challengesLabel": "Défis et Solutions",
  "futureLabel": "Améliorations Futures",
  "conclusionLabel": "Conclusion",
  "githubLabel": "GitHub",
  "websiteLabel": "Site Web",

  "projects": {
    "project1": {
      "title": "MECL",
      "description": "Un tableau de bord e-commerce entièrement personnalisable construit avec Vue.js et Laravel. Les clients peuvent gérer les produits, les commandes, les catégories, les clients et les rapports depuis une interface élégante, avec des fonctionnalités dynamiques comme les variantes de produits, le suivi des ventes en temps réel et la gestion du carrousel.",
      "details": "MECL (Modular Ecommerce Laravel) est une plateforme e-commerce flexible et évolutive conçue pour les entreprises souhaitant un contrôle total sur la gestion de leur boutique.<p><p>Le tableau de bord client, développé avec Vue.js, agit comme un puissant centre de gestion connecté à un backend Laravel (PHP) via une API.<p><p>Le tableau de bord propose les fonctionnalités suivantes :<p>- Produits : Ajouter ou supprimer des produits avec des tailles personnalisables, des catégories optionnelles et des prix dynamiques selon la taille.<p>- Tailles : Le client peut définir et gérer ses propres tailles sans limite.<p>- Catégories : Nombre illimité de catégories imbriquées avec relations parent/enfant.<p>- Commandes : Historique complet des commandes avec mise à jour des statuts en temps réel, envoi automatique d'e-mails aux clients et synchronisation côté frontend.<p>- Clients & Utilisateurs : Les administrateurs peuvent gérer les clients et les accès à la plateforme.<p>- Rapports : Statistiques visuelles des ventes et des inscriptions via des graphiques (quotidien, mensuel, annuel).<p>- Carrousel : Le client peut personnaliser les images du carrousel d'accueil, le texte des boutons et leurs liens.<p><p>Le projet est modulaire et 100% personnalisable, ce qui permet d'ajouter de nouvelles fonctionnalités à la demande. Les prochaines améliorations incluent : gestion des soldes, codes promo et avis sur les produits.",
      "tech": "Laravel, VueJs, TailwindCSS",
      
"screenshots": {
  "desktop": [
    {
      "src": "images/mecl/mecl_dashboard.png",
      "alt": "Vue générale du tableau de bord administrateur",
      "caption": "Vue d'ensemble du tableau de bord"
    },
    {
      "src": "images/mecl/mecl_front.png",
      "alt": "Aperçu du site public",
      "caption": "Page d'accueil du site public"
    },
    {
      "src": "images/mecl/mecl_products.png",
      "alt": "Gestion de la liste des produits",
      "caption": "Vue de gestion des produits"
    },
    {
      "src": "images/mecl/mecl_createP.png",
      "alt": "Écran de création de produit",
      "caption": "Création d'un nouveau produit"
    },
    {
      "src": "images/mecl/mecl_categories.png",
      "alt": "Page de gestion des catégories",
      "caption": "Gestion des catégories"
    },
    {
      "src": "images/mecl/mecl_carrousel.png",
      "alt": "Interface d'édition du carrousel",
      "caption": "Gestion du carrousel d'accueil"
    },
    {
      "src": "images/mecl/mecl_customers.png",
      "alt": "Liste des clients",
      "caption": "Gestion des clients"
    },
    {
      "src": "images/mecl/mecl_orders.png",
      "alt": "Commandes et suivi",
      "caption": "Suivi des commandes"
    },
    {
      "src": "images/mecl/mecl_users.png",
      "alt": "Permissions et rôles utilisateur",
      "caption": "Rôles et permissions"
    },
    {
      "src": "images/mecl/mecl_reports.png",
      "alt": "Rapports de ventes et d'activité",
      "caption": "Rapports & statistiques"
    },
    {
      "src": "images/mecl/mecl-stripe.png",
      "alt": "Interface de paiement Stripe",
      "caption": "Paiement"
    }
  ]
}
    },

    "project2": {
      "title": "Friandos",
      "description": "Une plateforme e-commerce personnalisée construite à partir du kit de démarrage MECL, avec une vitrine client dynamique intégrant filtres produits, réductions, avis clients et tarification basée sur la taille. Conçue pour démontrer une utilisation réelle en production.",
      "details": "Friandos est une démonstration commerciale de mon framework e-commerce personnalisé, MECL (Modular Ecommerce Laravel), adaptée pour montrer un cas d'usage concret.<p><p>Basé sur MECL, Friandos étend le starter kit original avec une boutique client complète, des filtres avancés, un système de réductions et d'avis produits — le tout relié à un backend Vue.js + Laravel.<p><p>La plateforme propose :<p>- Présentation des Produits : Les clients peuvent parcourir un catalogue responsive avec plages de prix dynamiques (tailles et réductions incluses).<p>- Filtres Avancés : Par taille, marque, gamme de prix et disponibilité.<p>- Réductions : Gestion en temps réel des promotions avec pourcentages de réduction et prix barrés.<p>- Système d'Avis : Les utilisateurs authentifiés peuvent laisser une note et un commentaire sur les produits.<p>- Frontend Responsive : Interface client personnalisée avec Tailwind CSS et Alpine.js.<p>- Panier et Commande : Ajout au panier (avec ou sans variantes de taille) et passage de commande (invité ou connecté).<p>- Dashboard Admin : Gestion des produits, tailles, réductions, catégories, marques, utilisateurs, commandes et statistiques.<p><p>Le projet est hébergé sur un VPS OVH (serveur Ubuntu) et conçu pour être évolutif avec des fonctionnalités futures telles que les codes promo et les listes de souhaits.<p><p>Friandos est une preuve de concept complète démontrant ma capacité à construire et déployer une solution e-commerce de bout en bout.",
      "tech": "Laravel, VueJs, AlpineJs, TailwindCSS",
      
      "websiteUrl": "https://friandos.fr",
      "screenshots": {
          "desktop": [
            {
              "src": "images/friandos/fdekstop-brands.png",
              "alt": "Gestion des marques",
              "caption": "Gestion des marques"
            },
            {
              "src": "images/friandos/fdekstop-categories.png",
              "alt": "Gestion des catégories",
              "caption": "Gestion des catégories"
            },
            {
              "src": "images/friandos/fdesktop-products.png",
              "alt": "Gestion des produits",
              "caption": "Gestion des produits"
            },
            {
              "src": "images/friandos/fdesktop-reports.png",
              "alt": "Vue d'ensemble des rapports",
              "caption": "Vue d'ensemble des rapports"
            },
            {
              "src": "images/friandos/fdesktop-cart.png",
              "alt": "Panier en tant qu'invité",
              "caption": "Panier en tant qu'invité"
            },
            {
              "src": "images/friandos/fdesktop-checkout.png",
              "alt": "Passage de commande invité",
              "caption": "Passage de commande invité"
            },
            {
              "src": "images/friandos/fdesktop-order.png",
              "alt": "Détails de la commande",
              "caption": "Détails de la commande dans le tableau de bord"
            },
            {
              "src": "images/friandos/fdesktop-carrousel.png",
              "alt": "Gestion du carrousel",
              "caption": "Gestion du carrousel"
            },
            {
              "src": "images/friandos/fdekstop-succesfull.png",
              "alt": "Page de commande réussie",
              "caption": "Page de commande réussie"
            }
          ]
        }
      
    },

    "project3": {
      "title": "SliceMyPDF",
      "description": "SliceMyPDF est une application web conçue pour permettre aux utilisateurs de télécharger des documents PDF et d'extraire des pages ou des plages spécifiques, créant ainsi de nouveaux fichiers PDF ne contenant que le contenu souhaité. Développée avec Python et le framework web Flask, elle offre une interface simple développée avec HTML, CSS et JavaScript. L'application est déployée sur un serveur Ubuntu hébergé sur AWS EC2, garantissant évolutivité et fiabilité.",
      "details": "",
      "tech": "",
      "githubUrl": "https://github.com/ourouchy/SliceMyPDF",
      "websiteUrl": "https://slicemypdf.me",
      
      "screenshots": {
        "desktop": [
          {
            "src": "images/desktop-upload.jpg",
            "alt": "Interface de Téléversement (Bureau)",
            "caption": "Téléchargement et Aperçu du PDF (Bureau)"
          },
          {
            "src": "images/desktop-selection.jpg",
            "alt": "Interface de Sélection des Pages (Bureau)",
            "caption": "Interface de Sélection des Pages (Bureau)"
          }
        ],
        "mobile": [
          {
            "src": "images/mobile-upload.jpg",
            "alt": "Interface de Téléversement (Mobile)",
            "caption": "Téléchargement de PDF (Mobile)"
          },
          {
            "src": "images/mobile-selection.jpg",
            "alt": "Interface de Sélection des Pages (Mobile)",
            "caption": "Sélection des Pages (Mobile)"
          }
        ]
      }
    },
    
    "project4": {
        "title": "InfoWeb France",
        "description": "Un site vitrine professionnel pour une école de formation tech, conçu pour explorer l'écosystème React et préparer une transition de Vue vers React, en cohérence avec l'évolution des stacks Laravel modernes.",
        "details": "InfoWeb France est un projet personnel servant de mise en main de React avec Vite, Tailwind CSS et TypeScript. Ce site présente des formations diplômantes (titres RNCP) et non certifiantes dans des domaines variés : développement web, data science, UX/UI design, cybersécurité, etc.<p><p>Le site met en avant :<p>- Une page d'accueil engageante avec section héro, CTA, et témoignages.<p>- Un système de filtrage dynamique des formations par thème, niveau ou mot-clé.<p>- Des pages de formation individuelles détaillées avec objectifs, compétences, débouchés et prérequis.<p>- Un système de témoignages interactifs et un carrousel personnalisable.<p>- Une page contact simple, avec formulaire et liens directs vers les financements.<p><p>Ce projet m'a permis de pratiquer des concepts clés comme le routing avec React Router, l'architecture modulaire de composants, les animations et transitions avec Tailwind CSS, et le déploiement sur GitHub Pages avec support du client-side routing.",
        "tech": "React, Vite, TailwindCSS, TypeScript, React Router, Radix UI",
        "websiteUrl": "https://ourouchy.github.io/infowebfrance",
        "githubUrl": "https://github.com/ourouchy/infowebfrance.git",
        "screenshots": {
          "desktop": [
            {
              "src": "images/infowebfrance/desktop-info-hero.png",
              "alt": "acceuil",
              "caption": "Page d'acceuil"
            },
            {
              "src": "images/infowebfrance/desktop-info-formation.png",
              "alt": "formation x",
              "caption": "Page de formation"
            },
            {
              "src": "images/infowebfrance/desktop-info-plans.png",
              "alt": "prix",
              "caption": "Apérçu des prix par formation"
            },
            {
              "src": "images/infowebfrance/desktop-info-contact.png",
              "alt": "contact",
              "caption": "Page de Contact"
            }
          ]
        }
    },
    "project5": {
  "title": "Polyglow (en cours de développement)",
  "description": "Une plateforme web évolutive de mise en relation entre apprenants et tuteurs de langues, construite comme un MVP full-stack avec une logique d’enrichissement progressif. Pensée pour gérer les réservations, les paiements et l'onboarding multilingue sur trois rôles utilisateurs.",
  "details": "Polyglow est une plateforme de tutorat linguistique actuellement en développement, conçue pour permettre une interaction fluide entre étudiants, enseignants et administrateurs.<p><p>La première version met l'accent sur les fonctionnalités essentielles telles que l'inscription des utilisateurs, la gestion des réservations, l'intégration d'un portefeuille virtuel et des interfaces adaptées à chaque rôle. Le projet suit une logique MVP structurée, avec une feuille de route claire pour des évolutions futures (version mobile, appariement intelligent avec IA, parcours de certification).<p><p>Fonctionnalités déjà en place :<p>- Système d'authentification : Connexion par e-mail avec tokens JWT sécurisés (cookies httpOnly).<p>- Inscription Enseignant Multi-étapes : 5 étapes avec vidéo de présentation, compétences linguistiques, disponibilités et finalisation du profil.<p>- Tableau de Bord Étudiant : Assistant de réservation, vue calendrier (mois/semaine/jour) et paiement via Stripe.<p>- Tableau de Bord Enseignant : Création de cours, gestion de disponibilité, statistiques étudiants et revenus.<p>- Portefeuille Virtuel : Un wallet par utilisateur, intégré à Stripe, avec historique des transactions.<p>- Interface Admin : Tableau de bord de base avec validation des candidatures enseignants.<p>- Layouts par Rôle : Interfaces modulaires selon le rôle, basées sur React Router et des layouts persistants.<p><p>La plateforme repose sur une API Django REST avec base PostgreSQL côté backend, et un frontend React + Tailwind. Le système de réservation est intégré avec sélection sur calendrier, vérification du solde et confirmation de paiement avant validation finale.",
  "tech": "React, TypeScript, TailwindCSS, Django, PostgreSQL, Stripe",
  "screenshots": {
    "desktop": [
      {
        "src": "images/polyglow/public.png",
        "alt": "Page d'accueil publique",
        "caption": "Page d'accueil avec CTA dynamiques"
      },
      {
        "src": "images/polyglow/auth.png",
        "alt": "Connexion",
        "caption": "Système de connexion et sécurité"
      },
      {
        "src": "images/polyglow/dashetud.png",
        "alt": "Tableau de bord étudiant",
        "caption": "Vue d’ensemble étudiant avec réservations"
      },
      {
        "src": "images/polyglow/booking.png",
        "alt": "Assistant de réservation",
        "caption": "Réservation étape par étape"
      },
      {
        "src": "images/polyglow/payment.png",
        "alt": "Portefeuille et paiement",
        "caption": "Portefeuille avec intégration Stripe"
      },
      {
        "src": "images/polyglow/dashens.png",
        "alt": "Tableau de bord enseignant",
        "caption": "Vue enseignant avec statistiques et cours"
      },
      {
        "src": "images/polyglow/course.png",
        "alt": "Gestion des cours",
        "caption": "Création de cours et gestion des disponibilités"
      },
      {
        "src": "images/polyglow/diflng.png",
        "alt": "Compétences linguistiques",
        "caption": "Support multilingue et internationalisation"
      },
      {
        "src": "images/polyglow/dashadm.png",
        "alt": "Interface admin",
        "caption": "Tableau de bord administrateur"
      },
      {
        "src": "images/polyglow/admin.png",
        "alt": "Gestion des utilisateurs admin",
        "caption": "Liste utilisateurs avec actions rapides"
      },
      {
        "src": "images/polyglow/dm.png",
        "alt": "Système de messagerie",
        "caption": "Messagerie en temps réel"
      },
      {
        "src": "images/polyglow/tests.png",
        "alt": "Couverture des tests",
        "caption": "Tests unitaires frontend/backend et couverture"
      },
      {
        "src": "images/polyglow/toasts.png",
        "alt": "Notifications toast",
        "caption": "Feedback interactif et gestion des erreurs"
      }
    ]
  }
},
    "other1": {
      "title": "Scripted Game Film Studio",
      "description": "Ce programme est ma première tentative d'automatisation. Je commence par quelque chose de pas trop complexe, mais c'est un bon début. L'objectif est d'automatiser la création de milliers de vidéos uniques pour plusieurs plateformes de réseaux sociaux.",
      "details": "J'ai écrit un script bash qui exécute mes projets Pygame, enregistre les sessions et les télécharge automatiquement. Le but ? Au moins 6 jeux pour que l'automatisation en vaille la peine. Pour l'instant, j'ai :<p><p>1. <strong>Balle Rebondissante</strong> – C'était mon introduction à Pygame. Simple, mais je vais en faire 2-3 versions (vitesses différentes, thèmes, etc.).<p>2. <strong>Jeu Quiz</strong> – La vache. Tire des questions d'une API de trivia, avec des personnages aléatoires pour une UI différente à chaque session.<p>&nbsp;&nbsp;&nbsp;&nbsp;◦ Peut être décliné en 3 genres (culture générale, histoire, pop culture) et 4 langues (même contenu, portée élargie).<p><p><strong>Comment Ça Marche :</strong><p>• Sessions de 66 secondes (6 questions chacune).<p>• Enregistrement entièrement automatisé (avec un script Python utilisant OBS WebSockets) + téléversement (APIs TikTok développeurs/Google).<p><p><strong>Les Chiffres :</strong><p>• Configuration de Base (6 jeux, 5 vidéos/jour chacun) :<p>&nbsp;&nbsp;&nbsp;&nbsp;◦ 6 jeux × 5 vidéos/jour = 30 vidéos/jour → 10 950 vidéos/an.<p>• Expansion Max (3 genres de quiz × 4 langues + 3 variantes de balle = 15 jeux) :<p>&nbsp;&nbsp;&nbsp;&nbsp;◦ 15 jeux × 5 vidéos/jour = 75 vidéos/jour → 27 375 vidéos/an.<p>Même si je ne fais que 3 genres de quiz (sans traductions) + 2 jeux de balle = 5 au total :<p>&nbsp;&nbsp;&nbsp;&nbsp;• 5 jeux × 5 vidéos/jour = 25 vidéos/jour → 9 125 vidéos/an.<p><p><strong>Pourquoi :</strong><p>• Le jeu quiz est super facile à scaler (il suffit de changer d’API/de traductions).<p>• Les variantes de balle se font en un après-midi.<p>• À 5 vidéos/jeu/jour, même 5 jeux = plus de 25K vidéos/an si ça tourne en continu.<p><p><strong>Objectif final principal</strong> : avoir 10 chaînes qui sortent 5 vidéos par jour avec une production et un téléversement automatisés pendant plus d’un an. Si je dois intervenir plus d’une fois par mois, je considère ça comme un échec. Ça doit être entièrement automatisé sinon ça ne vaut pas le coup.",
      "tech": "Pygame, Obs, Bash",
      "githubUrl": "",
      "websiteUrl": "",
      "screenshots": {
        "desktop": [
          
        ],
        "videos": [
          {
            "src": "videos/sgfs/quizzmaster_example.mp4",
            "caption": "Extrait QuizMaster"
          },
          {
            "src": "videos/sgfs/judjeball_example.mp4",
            "caption": "Extrait JudjeBall"
          }
        ]
      }
    }
  }
}
