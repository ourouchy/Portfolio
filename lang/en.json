{
  "logo": "Abaarour Moad",
  "homeLink": "Home",
  "projectsLink": "Projects",
  "contactLink": "Contact",
  "heroTitle": "Moad Abaarour",
  "heroDescription": "Developer specialized in designing and optimizing web applications. I combine technical expertise with an architectural mindset to deliver reliable, scalable solutions.",
  "heroSubtitle": "Full Stack Developer",
  "professionalStatement": "With extensive full-stack experience and a strong interest in AI, I translate business requirements into high-performance, long-lasting software.",
  "approachStatement": "I'm currently transitioning from Vue.js to React, in line with Laravel's evolving ecosystem, to deliver more scalable and maintainable applications.",
  "techStack.title": "Tech Stack",
  "techStack.categories.backend": "Backend",
  "techStack.categories.frontend": "Frontend",
  "techStack.categories.cloud": "Cloud & Deployment",
  "techStack.categories.other": "Other",
   
  "project1Title": "MECL",
  "project1Description": "Description of project 1",
  "project1Details": "Detailed explanation of Project 1, including technologies used, challenges overcome, and key achievements.",



  "project2Title": "Friandos",



  "project3Title": "SliceMyPDF",
  "project4Title": "Infoweb France",
  "project5Title": "Polyglow",
  "other1Title": "SGFS",
  "categoryWeb": "Web Applications",
  "categoryWebDescription": "Full-stack web applications, e-commerce platforms, and web tools",
  "categoryOther": "Other Projects",
  "categoryOtherDescription": "Mobile apps, desktop applications, and other software projects",
  "backToCategories": "Back to Categories",

  "screenshotsLabel": "Application Screenshots",
  "desktopLabel": "Desktop Interface",
  "mobileLabel": "Mobile Experience",
  "techStackLabel": "Technology Stack",
  "githubLabel": "GitHub",
  "websiteLabel": "Website",

  "projects": {
    "project1": {
      "title": "MECL",
      "description": "A fully customizable ecommerce dashboard built with Vue.js and Laravel. Clients can manage products, orders, categories, customers, and reports from a sleek admin panel, with dynamic features like product variants, live sales tracking, and carousel control.",
      "details": "MECL (Modular Ecommerce Laravel) is a flexible and scalable ecommerce platform designed for businesses who want full control over their store management.<p><p>The client-facing dashboard, built in Vue.js, acts as a powerful control center connected to a Laravel (PHP) backend via API.<p><p>The dashboard offers the following features:<p>- Products: Add or remove products with customizable sizes, optional categories, and dynamic pricing based on size.<p>- Sizes: Clients can define and manage their own size options without limitations.<p>- Categories: Unlimited nested categories with parent-child relationships.<p>- Orders: Complete order history with real-time status updates that trigger email notifications to customers and reflect on the frontend.<p>- Customers & Users: Admins manage customer records and platform access control.<p>- Reports: Visual sales/customer analytics via charts (daily/monthly/yearly breakdowns).<p>- Carousel Management: Clients can personalize homepage carousels with images, button text, and links.<p><p>The project is modular and 100% customizable, allowing new features to be added per client request. Future updates include: discounts, promo codes, and product reviews.",
      "tech": "Laravel, VueJs, TailwindCSS.",
      "screenshots": {
        "desktop": [
          {
            "src": "images/mecl/mecl_dashboard.png",
            "alt": "Admin dashboard overview",
            "caption": "Main Dashboard Overview"
          },
          {
            "src": "images/mecl/mecl_front.png",
            "alt": "Public site preview",
            "caption": "Public Site Front Page"
          },
          {
            "src": "images/mecl/mecl_products.png",
            "alt": "Product list management",
            "caption": "Product Management View"
          },
          {
            "src": "images/mecl/mecl_createP.png",
            "alt": "Create new product screen",
            "caption": "Creating a New Product"
          },
          {
            "src": "images/mecl/mecl_categories.png",
            "alt": "Category management page",
            "caption": "Manage Product Categories"
          },
          {
            "src": "images/mecl/mecl_carrousel.png",
            "alt": "Carousel editor interface",
            "caption": "Homepage Carousel Management"
          },
          {
            "src": "images/mecl/mecl_customers.png",
            "alt": "Customers list view",
            "caption": "Customer Management"
          },
          {
            "src": "images/mecl/mecl_orders.png",
            "alt": "Orders and tracking",
            "caption": "View and Track Orders"
          },
          {
            "src": "images/mecl/mecl_users.png",
            "alt": "User permissions and roles",
            "caption": "User Roles & Permissions"
          },
          {
            "src": "images/mecl/mecl_reports.png",
            "alt": "Sales and activity reports",
            "caption": "Sales & Activity Reports"
          },
          {
            "src": "images/mecl/mecl-stripe.png",
            "alt": "Stripe view",
            "caption": "Payment"
          }
        ]
      }
    },

    "project2": {
      "title": "Friandos",
      
      "description": "A customized e-commerce platform built using the MECL starter kit, featuring a dynamic customer storefront with product filters, discounts, reviews, and size-based pricing. Designed to demonstrate a production-ready implementation.",
      "details": "Friandos is a commercial demonstration of my custom e-commerce framework, MECL (Modular Ecommerce Laravel), tailored to show real-world usage.<p><p>Built on top of MECL, Friandos extends the original starter kit with a complete customer-facing storefront, advanced filtering options, discount systems, and product reviews — everything connected seamlessly to a Vue.js + Laravel backend.<p><p>The platform includes:<p>- Product Display: Customers can browse a responsive product catalog with dynamic price ranges (including sizes and discounts).<p>- Advanced Filters: By size, brand, price range, and stock availability.<p>- Discounts: Real-time discounts based on original and current prices, with percentage badges and strikethrough pricing.<p>- Reviews System: Authenticated users can leave ratings and comments on products.<p>- Responsive Frontend: A fully custom frontend using Tailwind CSS and Alpine.js.<p>- Cart and Checkout: Users can add products to cart (with or without size variants) and proceed to checkout (guest or authenticated).<p>- Admin Dashboard: Manage products, sizes, discounts, categories, brands, users, orders, and analytics.<p><p>The project is hosted on an OVH VPS (Ubuntu server) and built to be scalable for future features such as promo codes and wishlists.<p><p>Friandos serves as a complete proof of concept to demonstrate my ability to build and deploy an end-to-end ecommerce solution from scratch.",
      "tech": "Laravel, VueJs, AlpineJs, TailwindCSS",
      "websiteUrl": "https://friandos.fr",
      "screenshots": {
        "desktop" : [
          {
            "src": "images/friandos/fdekstop-brands.png",
            "alt": "Brands Management",
            "caption": "Brands Management"
          },
          {
            "src": "images/friandos/fdekstop-categories.png",
            "alt": "Categories Management",
            "caption": "Categories Management"
          },
          {
            "src": "images/friandos/fdesktop-products.png",
            "alt": "Products Management",
            "caption": "Products Management"
          },
          {
            "src": "images/friandos/fdesktop-reports.png",
            "alt": "Reports overview",
            "caption": "Reports overview"
          },
          {
            "src": "images/friandos/fdesktop-cart.png",
            "alt": "Cart as a guest",
            "caption": "Cart as a guest"
          },
          {
            "src": "images/friandos/fdesktop-checkout.png",
            "alt": "Checkout as a guest",
            "caption": "Checkout as a guest"
          },
          {
            "src": "images/friandos/fdesktop-order.png",
            "alt": "Order details",
            "caption": "Order details in dashboard"
          },
          {
            "src": "images/friandos/fdesktop-carrousel.png",
            "alt": "Carrousel Management",
            "caption": "Carrousel Management"
          },          {
            "src": "images/friandos/fdekstop-succesfull.png",
            "alt": "Successfull Order page",
            "caption": "Successfull Order page"
          }
        ]
      }
    },

    "project3": {
      "title": "SliceMyPDF",
      "description": "SliceMyPDF is a web application designed to enable users to upload PDF documents and extract specific pages or ranges, creating new PDF files containing only the desired content. Built using Python and the Flask web framework, it offers a straightforward interface developed with HTML, CSS, and JavaScript. The application is deployed on an Ubuntu server hosted on AWS EC2.​",
      "tech": "Python, Flask, HTML, CSS, JavaScript",
      "githubUrl": "https://github.com/ourouchy/SliceMyPDF",
      "websiteUrl": "https://slicemypdf.me",

      "screenshots": {
        "desktop": [
          {
            "src": "images/desktop-upload.jpg",
            "alt": "Desktop Upload Interface",
            "caption": "PDF Upload and Preview (Desktop)"
          },
          {
            "src": "images/desktop-selection.jpg",
            "alt": "Desktop Page Selection",
            "caption": "Page Selection Interface (Desktop)"
          }
        ],
        "mobile": [
          {
            "src": "images/mobile-upload.jpg",
            "alt": "Mobile Upload Interface",
            "caption": "PDF Upload (Mobile)"
          },
          {
            "src": "images/mobile-selection.jpg",
            "alt": "Mobile Page Selection",
            "caption": "Page Selection (Mobile)"
          }
        ]
      }
    },
    "project4": {
      "title": "InfoWeb France",
      "description": "A professional landing site for a tech training school, built to explore the React ecosystem and transition from Vue to React, in line with modern Laravel stack trends.",
      "details": "InfoWeb France is a personal project aimed at getting hands-on experience with React using Vite, Tailwind CSS, and TypeScript. The site showcases both certified (RNCP titles) and non-certified training programs across various fields such as web development, data science, UX/UI design, and cybersecurity.<p><p>The website features:<p>- An engaging homepage with hero section, CTA, and testimonials.<p>- A dynamic filtering system to browse courses by topic, level, or keyword.<p>- Individual course pages with goals, skills, career paths, and prerequisites.<p>- An interactive testimonial section and a customizable carousel.<p>- A simple contact page with a form and direct financing links.<p><p>This project allowed me to practice key concepts such as client-side routing with React Router, modular component architecture, transitions and animations using Tailwind CSS, and deployment on GitHub Pages with full SPA support.",
      "tech": "React, Vite, TailwindCSS, TypeScript, React Router, Radix UI",
      "websiteUrl": "https://ourouchy.github.io/infowebfrance",
      "githubUrl": "https://github.com/ourouchy/infowebfrance.git",
      "screenshots": {
        "desktop": [
          {
            "src": "images/infowebfrance/desktop-info-hero.png",
            "alt": "home",
            "caption": "Homepage"
          },
          {
            "src": "images/infowebfrance/desktop-info-formation.png",
            "alt": "course",
            "caption": "Course detail page"
          },
          {
            "src": "images/infowebfrance/desktop-info-plans.png",
            "alt": "pricing",
            "caption": "Pricing overview"
          },
          {
            "src": "images/infowebfrance/desktop-info-contact.png",
            "alt": "contact",
            "caption": "Contact page"
          }
        ]
      }
    },
    "project5": {
    "title": "Polyglow (under development)",
    "description": "A scalable web platform for connecting language learners and tutors, built as a full-stack MVP with progressive enhancement in mind. Designed to handle bookings, payments, and multilingual onboarding across three user roles.",
    "details": "Polyglow is a language tutoring platform currently under development, built to enable seamless interaction between students, teachers, and admins.<p><p>The initial release focuses on essential features like user onboarding, booking management, wallet integration, and scalable layouts per user role. It follows a structured MVP-first approach, with a clear plan for future enrichment (mobile version, AI-based tutor matching, certification workflows).<p><p>Key features implemented:<p>- Authentication System: Email-based login with secure JWT (httpOnly cookie) sessions.<p>- Multi-step Teacher Registration: 5-step onboarding with video uploads, language proficiencies, availability setup, and profile completion.<p>- Student Dashboard: Real-time booking assistant, calendar views (month/week/day), and payment via Stripe.<p>- Teacher Dashboard: Course creation, availability management, student stats, and income tracking.<p>- Wallet System: Each user has a dedicated wallet, with full Stripe integration and transaction history.<p>- Admin Interface: Basic admin dashboard with teacher application approval system.<p>- Role-based Layouts: Modular UI powered by React Router and persistent layouts tailored to each role.<p><p>The platform runs on a PostgreSQL + Django REST backend, with React + Tailwind on the frontend. The booking system integrates calendar-based selection, wallet balance verification, and payment confirmation before finalizing lessons.",
    "tech": "React, TypeScript, TailwindCSS, Django, PostgreSQL, Stripe",
    "screenshots": {
  "desktop": [
    {
      "src": "images/polyglow/public.png",
      "alt": "Public landing page",
      "caption": "Public landing page with dynamic CTA"
    },
    {
      "src": "images/polyglow/auth.png",
      "alt": "Authentication flow",
      "caption": "Login and security"
    },
    {
      "src": "images/polyglow/dashetud.png",
      "alt": "Student dashboard",
      "caption": "Student dashboard"
    },
    {
      "src": "images/polyglow/booking.png",
      "alt": "Booking wizard",
      "caption": "Step-by-step reservation process"
    },
    {
      "src": "images/polyglow/payment.png",
      "alt": "Wallet and payment",
      "caption": "Stripe-powered wallet with transaction history"
    },
    {
      "src": "images/polyglow/dashens.png",
      "alt": "Teacher dashboard",
      "caption": "Teacher dashboard"
    },
    {
      "src": "images/polyglow/course.png",
      "alt": "Course manager",
      "caption": "Create and manage language courses and availability"
    },
    {
      "src": "images/polyglow/diflng.png",
      "alt": "Language proficiencies",
      "caption": "Internationalization"
    },
    {
      "src": "images/polyglow/dashadm.png",
      "alt": "Admin dashboard",
      "caption": "Admin dashboard"
    },
    {
      "src": "images/polyglow/admin.png",
      "alt": "Admin user table",
      "caption": "Admin user list with filters and actions"
    },
    {
      "src": "images/polyglow/dm.png",
      "alt": "Message system",
      "caption": "Real time message system"
    },
    {
      "src": "images/polyglow/tests.png",
      "alt": "Test coverage",
      "caption": "Frontend and backend unit tests and coverage results"
    },
    {
      "src": "images/polyglow/toasts.png",
      "alt": "Toast notifications",
      "caption": "Interactive feedback and error handling"
    }
  ]
}
    },
    "other1": {
      "title": "Scripted Game Film Studio",
      "description": "This program is my first attempt at automation. I'm starting with something not that complex, but it's a good start. The goal is to automate the creation of thousands of unique videos for multiple social media platforms.",
      "details": "I wrote a bash script that runs my Pygame projects, records sessions, and auto-uploads them. The goal? At least 6 games to make automation worth it. Right now, I've got:<p><p>1. <strong>Bouncing Ball</strong> – Basicly my introduction to Pygame. Simple, but I'll tweak it into 2-3 versions (different speeds, themes, etc.).<p>2. <strong>Quiz Game</strong> – The cow. Pulls questions from a trivia API, with random characters for fresh UI each session.<p>&nbsp;&nbsp;&nbsp;&nbsp;◦ Can split this into 3 genres (general knowledge, history, pop culture) and 4 languages (same content, wider reach).<p><p><strong>How It Works:</strong><p>• 66-second sessions (6 questions each).<p>• Fully automated recording (with a python script that uses OBS WebSockets) + uploading (TikTok developers/Google APIs).<p><p><strong>The Numbers (Hold On):</strong><p>• Base Setup (6 games, 5 vids/day each):<p>&nbsp;&nbsp;&nbsp;&nbsp;◦ 6 games × 5 vids/day = 30 vids/day → 10,950 vids/year.<p>• Max Expansion (3 quiz genres × 4 langs + 3 ball variants = 15 games):<p>&nbsp;&nbsp;&nbsp;&nbsp;◦ 15 games × 5 vids/day = 75 vids/day → 27,375 vids/year.<p>Even if I only do 3 quiz genres (no translations) + 2 ball games = 5 total:<p>&nbsp;&nbsp;&nbsp;&nbsp;• 5 games × 5 vids/day = 25 vids/day → 9,125 vids/year.<p><p><strong>Why It Slaps:</strong><p>• The quiz game scales stupidly easy (just swap APIs/translations).<p>• Bouncing ball variants take an afternoon to tweak.<p>• At 5 vids/game/day, even 5 games = 25K+ vids/year if I run it nonstop.<p><p><strong>Main end goal</strong> is to have 10 channels that pops out 5 videos per day with video production and uploading automated for more than a year. If I have to intervene more than 1 time a month, I'll consider it a failure. It's has to be fully automated or there is no point.",
      "tech": "Pygame, Obs, Bash",
      "githubUrl": "",
      "websiteUrl": "",
      "screenshots": {
        "desktop": [
          
        ],
        "videos": [
          {
            "src": "videos/sgfs/quizzmaster_example.mp4",
            "caption": "QuizMaster Sample"
          },
          {
            "src": "videos/sgfs/judjeball_example.mp4",
            "caption": "JudjeBall Sample"
          }
        ]
      }
    }
  }
}